
# to be sourced from a ourex/<pack>/build script

#//////////////////////////////////////////////
#/// compile //////////////////////////////////
#//////////////////////////////////////////////
if [ ${build_compile} = "yes" ] ; then

/bin/rm -f c_tmp
/bin/rm -f cpp_tmp
/bin/rm -f cxx_tmp

if [ -d ./source ] ; then
  find ./source -maxdepth 1 -name '*.c' -print >> c_tmp
  find ./source -maxdepth 1 -name '*.cpp' -print >> cpp_tmp
  find ./source -maxdepth 1 -name '*.cxx' -print >> cxx_tmp
fi
if [ -d ./src ] ; then
  find ./src -maxdepth 1 -name '*.c' -print >> c_tmp
  find ./src -maxdepth 1 -name '*.cpp' -print >> cpp_tmp
  find ./src -maxdepth 1 -name '*.cxx' -print >> cxx_tmp
fi

gen_flags=
if [ ${build_visual} = "yes" ] ; then
  gen_flags="${gen_flags} /wd4996"
fi

if [ -d ./include ] ; then
  if [ ${build_visual} = "yes" ] ; then
    gen_flags="${gen_flags} /I./include"
  else
    gen_flags="${gen_flags} -I./include"
  fi
fi

if [ -d ./${build_pack} ] ; then
  if [ ${build_visual} = "yes" ] ; then
    gen_flags="${gen_flags} /I./${build_pack}"
  else
    gen_flags="${gen_flags} -I./${build_pack}"
  fi
fi

ccflags="${ccflags} ${gen_flags}"
cppflags="${cppflags} ${gen_flags}"

. ${inlib_mgr}/build_compile

fi # end build_compile

if [ ${build_archive} = "yes" ] ; then . ${inlib_mgr}/build_archive; fi

. ${inlib_mgr}/build_clean
