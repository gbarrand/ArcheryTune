
if [ "${build_distrib}" = "yes" ] ; then
if [ ! -f ${file_exe} ] ; then
  echo "exlib/build_app_distrib : exe not built."
else

  target=
  if [ ${build_Wt} = "yes" ] ; then
    target=Wt
  elif [ ${build_visual} = "yes" ] ; then
    target=Windows

  elif [ ${build_x11} = "yes" ] ; then
    target=X11

  elif [ ${build_android} = "yes" -o ${build_native_android} = "yes" ] ; then

    if [ ${build_verbose} = yes ] ; then
  echo 'exlib/mgr/build_distrib : android : done by ant in inlib/mgr/build_app.'
    fi

    #echo dummy > /dev/null

  elif [ ${build_cocoa} = "yes" -o ${build_cocoa_gnu} = "yes" ] ; then

    if [ ${build_verbose} = yes ] ; then
      echo "exlib/mgr/build_distrib : for cocoa/coca_gnu ..."
    fi

    /bin/rm -R -f ${build_path}/distrib

    head=${build_path}/distrib/${app}/${version}/${app}.app/Contents
    /bin/mkdir -p ${head}/MacOS
    /bin/cp ${file_exe} ${head}/MacOS/.
    if [ -d ../comres ] ; then
      /bin/cp -R -f ../comres ${head}/Resources
    fi

    #builtin-infoPlistUtility ioda-Info.plist -genpkginfo ${head}/Resources/PkgInfo -expandbuildsettings -platform macosx -o ${head}/Info.plist

    /bin/cp ${exlib_mgr}/app_PkgInfo ${head}/PkgInfo

    if [ -f ../Cocoa/${app}.icns ] ; then
      /bin/mkdir -p ${head}/Resources
      /bin/cp ../Cocoa/${app}.icns ${head}/Resources/.
    fi

    if [ -f ../Cocoa/${app}-Info.plist ] ; then
      /bin/cp ../Cocoa/${app}-Info.plist tmp_0

      from='${EXECUTABLE_NAME}'
      to="${app}"
      sed -e "s|${from}|${to}|g" tmp_0 > tmp_1

      from='${PRODUCT_NAME}'
      to="${app}"
      sed -e "s|${from}|${to}|g" tmp_1 > tmp_2

      from='${PRODUCT_NAME:rfc1034identifier}'
      to="${app}"
      sed -e "s|${from}|${to}|g" tmp_2 > tmp_3

      from='com.yourcompany'
      to="${app_bundle_id}"
      sed -e "s|${from}|${to}|g" tmp_3 > tmp_4

      from='${MACOSX_DEPLOYMENT_TARGET}'
      to="${macosx_target}"
      sed -e "s|${from}|${to}|g" tmp_4 > tmp_5

      /bin/mv tmp_5 ${head}/Info.plist

      /bin/rm -f tmp_0 tmp_1 tmp_2 tmp_3 tmp_4

    else 
      echo "exlib/build_app_distrib : ../Cocoa/${app}-Info.plist not found."
    fi

    #///////////////////////////////////////////////////
    #/// interface builder : ///////////////////////////
    #///////////////////////////////////////////////////
    /bin/mkdir -p ${head}/Resources/English.lproj
    ibflags="--errors --warnings --notices"
    ibflags="${ibflags} --output-format human-readable-text"
    ibtool ${ibflags} --compile ${head}/Resources/English.lproj/MainMenu.nib ../Cocoa/English.lproj/MainMenu.xib
    # option not available with ibtool 3.x :
    #--sdk ${macosx_sdk}
    
    # must be after having done ibtool :
    #builtin-copyStrings --validate --inputencoding utf-8 --outputencoding UTF-16 --outdir ${head}/Resources/English.lproj -- English.lproj/InfoPlist.strings
    plutil -convert binary1 -o ${head}/Resources/English.lproj/InfoPlist.strings ../Cocoa/English.lproj/InfoPlist.strings

    #///////////////////////////////////////////////////
    #/// zip : /////////////////////////////////////////
    #///////////////////////////////////////////////////
    chmod -R a+rx ${head}/MacOS

    platform=cocoa-clang
    if [ ${build_cocoa_gnu} = "yes" ] ; then platform=cocoa-gnu;fi

    save_dir=`pwd`
    cd ${build_path}/distrib
    zip -qr ${app}-${version}-${platform}.zip ./${app}
    cd ${save_dir}

  elif [ ${build_ios} = "yes" -o ${build_ios_gnu} = "yes" ] ; then
    #echo "exlib/build_app_distrib : ios : debug : 1"

    if [ ${build_verbose} = yes ] ; then
      echo "exlib/mgr/build_distrib : for ios ..."
    fi

    /bin/rm -R -f ${build_path}/distrib

    head=${build_path}/distrib/${app}/${version}/${app}.app
    /bin/mkdir -p ${head}

    #/bin/cp ${file_exe} ${head}/.
    # create and put in distrib a universal binary file :
    /usr/bin/lipo -create ${file_exe} -output ${head}/${app}

    if [ -d ../comres ] ; then
      find ../comres -name '*' -type f -exec /bin/cp {} ${head}/. \;
    fi
    /bin/cp ../iOS/Icon.png           ${head}/.
    /bin/cp ../iOS/Icon-72.png        ${head}/.
    /bin/cp ../iOS/Icon-114.png       ${head}/.
    /bin/cp ../iOS/Shaders/Shader.fsh ${head}/.
    /bin/cp ../iOS/Shaders/Shader.vsh ${head}/.

    #builtin-infoPlistUtility ioda-Info.plist -genpkginfo /Users/barrand/private/dev/softinex/ioda/ios/build/Release-iphoneos/ioda.app/PkgInfo -expandbuildsettings -format binary -platform iphoneos -resourcerulesfile /Users/barrand/private/dev/softinex/ioda/ios/build/Release-iphoneos/ioda.app/ResourceRules.plist -o /Users/barrand/private/dev/softinex/ioda/ios/build/Release-iphoneos/ioda.app/Info.plist

    if [ -f ../iOS/${app}-Info.plist ] ; then
      /bin/cp ../iOS/${app}-Info.plist tmp_0

      from='${EXECUTABLE_NAME}'
      to="${app}"
      sed -e "s|${from}|${to}|g" tmp_0 > tmp_1

      from='${PRODUCT_NAME}'
      to="${app}"
      sed -e "s|${from}|${to}|g" tmp_1 > tmp_2

      from='${PRODUCT_NAME:rfc1034identifier}'
      to="${app}"
      sed -e "s|${from}|${to}|g" tmp_2 > tmp_3

      from='com.yourcompany'
      to="${app_bundle_id}"
      sed -e "s|${from}|${to}|g" tmp_3 > tmp_4

      /bin/mv tmp_4 ${head}/Info.plist

      /bin/rm -f tmp_0 tmp_1 tmp_2 tmp_3

    else 
      echo "exlib/build_app_distrib : ../iOS/${app}-Info.plist not found."
    fi

    #///////////////////////////////////////////////////
    #/// interface builder : ///////////////////////////
    #///////////////////////////////////////////////////
    #IBC_MINIMUM_COMPATIBILITY_VERSION=3.2
    #export IBC_MINIMUM_COMPATIBILITY_VERSION

    ibflags="--errors --warnings --notices"
    ibflags="${ibflags} --output-format human-readable-text"
    ibtool ${ibflags} --compile ${head}/MainWindow.nib ../iOS/MainWindow.xib --sdk ${ios_sdk}
    ibtool ${ibflags} --compile ${head}/MainWindow-iPad.nib ../iOS/Resources-iPad/MainWindow-iPad.xib --sdk ${ios_sdk}

    #///////////////////////////////////////////////////
    #/// code sign : ///////////////////////////////////
    #///////////////////////////////////////////////////

    sign_dev=yes
    if [ ${sign_dev} = yes ] ; then

      ios_signature='iPhone Developer'
      /usr/bin/codesign -f -s "${ios_signature}" --entitlements ${exlib_mgr}/ios_Entitlements.plist ${head}
   
    else

      #///////////////////////////////////////////////////
      #/// what xcode does... ////////////////////////////
      #///////////////////////////////////////////////////
      /bin/cp ${exlib_mgr}/app_PkgInfo  ${head}/PkgInfo
      /bin/cp ${exlib_mgr}/ios_ResourceRules.plist  ${head}/ResourceRules.plist
      /bin/cp ${exlib_mgr}/ios_embedded.mobileprovision  ${head}/embedded.mobileprovision

      #builtin-productPackagingUtility /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.0.sdk/Entitlements.plist -entitlements -format xml -o ../iOS/${app}.xcent

      if [ -f ../iOS/${app}.xcent ] ; then

        CODESIGN_ALLOCATE=/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/codesign_allocate
        export CODESIGN_ALLOCATE
        ios_signature='iPhone Developer: Guy Barrand (L4H5478NAY)'
        /usr/bin/codesign -f -s "${ios_signature}" --resource-rules=${head}/ResourceRules.plist --entitlements ../iOS/${app}.xcent ${head}
  
      else
        echo "exlib/build_app_distrib : ../iOS/${app}.xcent not found."
      fi

    fi

    #///////////////////////////////////////////////////
    #/// zip : /////////////////////////////////////////
    #///////////////////////////////////////////////////
    chmod -R a+rx ${head}/${app}

    platform=cocoa-ios

    save_dir=`pwd`
    cd ${build_path}/distrib
    zip -qr ${app}-${version}-${platform}.zip ./${app}
    cd ${save_dir}

  elif [ ${build_iossim} = "yes" ] ; then
    echo "exlib/build_app_distrib : iossim : do nothing."

  else
    echo "exlib/build_app_distrib : unknown config."
  fi

  if [ "${target}" != "" ] ; then

    if [ ${build_verbose} = yes ] ; then
      echo "exlib/mgr/build_distrib : for ${target} ..."
    fi

    /bin/rm -R -f ${build_path}/distrib

    head=${build_path}/distrib/${app}/${version}
    /bin/mkdir -p ${head}/bin
    /bin/cp ${file_exe} ${head}/bin/.
    if [ -e "${file_exe_manifest}" ] ; then
      /bin/cp ${file_exe_manifest} ${head}/bin/.
    fi

    #if [ "${target}" = "X11" ] ; then
      if [ "${use_archive}" != "yes" ] ; then
        echo "exlib/mgr/build_app_distrib : should put in the distrib :"
        echo "  ${libs}"
      fi
    #fi

    if [ -d ../comres ] ; then
      /bin/cp -R -f ../comres ${head}/res
    fi
    if [ ${build_Wt} = "yes" ] ; then
      /bin/cp ${exlib_mgr}/app_wt_config.xml ${head}/res/wt_config.xml
      /bin/cp ${exlib_mgr}/app_run_Wt ${head}/bin/run
    fi
  
    platform=`${inlib_mgr}/build_platform "${cpp_compiler}"`
    if [ "${platform}" = "" ] ; then
      echo "exlib/build_app_distrib : can't guess platform for ${cpp_compiler}."
    else
  
      chmod -R a+rx ${head}/bin
      chmod -R a+r ${head}/res

      #///////////////////////////////////////////////////
      #/// zip : /////////////////////////////////////////
      #///////////////////////////////////////////////////
      save_dir=`pwd`
      cd ${build_path}/distrib
      zip -qr ${app}-${version}-${platform}.zip ./${app}
      cd ${save_dir}

    fi
  fi

fi
fi
