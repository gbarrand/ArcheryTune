// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_sg_infos
#define inlib_sg_infos

#include "node"

#include "mf"

namespace inlib {
namespace sg {

class infos : public node {
public:
  INLIB_NODE(infos,inlib::sg::infos,node)
public:
  mf_string strings;
public:
  virtual const std::vector<field_desc>& node_fields() const {
    static std::vector<field_desc> s_v;
    if(s_v.empty()) {      
      s_v = parent::node_fields();
      INLIB_ADD_FIELD_DESC(strings)
    }
    return s_v;
  }
private:
  void add_fields(){
    add_field(&strings);
  }
public:
  infos()
  :parent()
  {  
    add_fields();
  }
  virtual ~infos(){}
public:
  infos(const infos& a_from)
  :parent(a_from)
  ,strings(a_from.strings)
  {
    add_fields();
  }
  infos& operator=(const infos& a_from){
    parent::operator=(a_from);
    strings = a_from.strings;
    return *this;
  }
};

}}

#endif
