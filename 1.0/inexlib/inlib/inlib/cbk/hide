// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_cbk_hide
#define inlib_cbk_hide

#include "../sg/bcbk"
#include "../sg/_switch"

namespace inlib {
namespace cbk {

class hide : public sg::bcbk {
  typedef sg::bcbk parent;
public:
  virtual return_action action() {
    if(m_sw.which==1) return return_none;
    m_sw.which = 1;
    return return_to_render;     
  }
  virtual sg::bcbk* copy() const {return new hide(*this);}
public:
  hide(sg::_switch& a_sw):parent(),m_sw(a_sw){}
  virtual ~hide(){}
public:
  hide(const hide& a_from):parent(a_from),m_sw(a_from.m_sw){}
  hide& operator=(const hide& a_from){
    parent::operator=(a_from);
    return *this;
  }
protected:
  sg::_switch& m_sw;
};

}}

#endif
