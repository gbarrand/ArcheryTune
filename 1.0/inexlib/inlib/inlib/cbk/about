// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_cbk_about
#define inlib_cbk_about

#include "../sg/bcbk"

#include "../sg/gui_viewer"

namespace inlib {
namespace cbk {

class about : public sg::bcbk {
  typedef sg::bcbk parent;
public:
  virtual return_action action() {
  
    sg::text* text = new sg::text(m_gv.ttf());
    text->font = sg::gui_font();
    m_gv.set_colors(*text);
  
    text->strings = m_txt;
  
    text->confine = true;
    text->hjust = sg::center;

    m_gv.push_list(text);

    return return_to_render;     
  }
  virtual sg::bcbk* copy() const {return new about(*this);}
  
public:
  virtual const std::string& s_cls() const {return s_class();} //to works
public:
  about(sg::gui_viewer& a_gv,const std::vector<std::string>& a_txt)
  :parent()
  ,m_gv(a_gv)
  ,m_txt(a_txt)
  {}
  virtual ~about(){}
protected:
  about(const about& a_from)
  :parent(a_from)
  ,m_gv(a_from.m_gv)
  ,m_txt(a_from.m_txt)
  {}
  about& operator=(const about& a_from){
    parent::operator=(a_from);
    m_txt = a_from.m_txt;
    return *this;
  }
protected:
  sg::gui_viewer& m_gv;
  std::vector<std::string> m_txt;
};

}}
  
#endif
