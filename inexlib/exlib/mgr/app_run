#!/bin/sh -f

run_gdb=no
run_Wt=no
run_WebGL=no
run_args=
build_args=

while test $# -ge 1 ; do
  case $1 in
    # to find build_out dir :
    -gnu)         build_args="${build_args} $1";;
    -gnu_11)      build_args="${build_args} $1";;
    -intel)       build_args="${build_args} $1";;
    -clang)       build_args="${build_args} $1";;
    -visual)      build_args="${build_args} $1";;

    -no_screen)   build_args="${build_args} $1";;
    -cocoa)       build_args="${build_args} $1";;
    -cocoa_gnu)   build_args="${build_args} $1";;
    -ios)         build_args="${build_args} $1";;
    -ios_gnu)     build_args="${build_args} $1";;
    -iossim)      build_args="${build_args} $1";;
    -x11)         build_args="${build_args} $1";;

    -v)      build_args="${build_args} $1";;
    -x)      build_args="${build_args} $1";;

    # local options : 
    -gdb) run_gdb=yes;;
    -Wt)  run_Wt=yes;;
    -wt)  run_Wt=yes;;
    -WebGL)  run_WebGL=yes;;
    -webgl)  run_WebGL=yes;;

    -*) run_args="${run_args} $1";;  
     *) run_args="${run_args} $1";;  
  esac
  shift
done

exlib_mgr=../../inexlib/exlib/mgr
. ${exlib_mgr}/build_app_header  # to get build_path

if [ ${build_verbose} = yes ] ; then
  echo "run path is ${build_path}"
fi

if [ "${run_Wt}" = "yes" ] ; then
  # NOTE : if wanting to upload big data file, you have to change in :
  #            wt_config.xml
  #        the resource :
  #	       <max-request-size>
  #        which is at 128 (128*1024 bytes) by default.
  res_dir="${build_path}/distrib/${app}/${version}/res"
  if [ -f ${res_dir}/wt_config.xml ] ; then
    run_args="${run_args} --approot ${res_dir}"
  fi
  ${build_path}/distrib/${app}/${version}/bin/${app} ${run_args}
elif [ "${run_WebGL}" = "yes" ] ; then
  ${build_path}/distrib/${app}/${version}/bin/${app} ${run_args}
else
  if [ "${run_gdb}" = "yes" ] ; then
    gdb ${build_path}/distrib/${app}/${version}/bin/${app}
  elif [ ${build_cocoa} = "yes" -o ${build_cocoa_gnu} = "yes" ] ; then
    osx_vers="`sw_vers -productVersion`"
    is_10_5=no
    if [ "`echo ${osx_vers} | sed -e 's:10.5::g'`" != "${osx_vers}" ] ; then
      is_10_5=yes
    fi
    if [ "${is_10_5}" = "yes" ] ; then
      if [ "${run_args}" != "" ] ; then
        echo "WARNING : on OSX ${osx_vers}, can't pass args to the open command."
      fi
      open ${build_path}/distrib/${app}/${version}/${app}.app
    else
      open ${build_path}/distrib/${app}/${version}/${app}.app --args ${run_args}
    fi
   elif [ ${build_visual} = yes -a "${SSH_CLIENT}" != "" ] ; then
     path="${build_path}/distrib/${app}/${version}/bin/${app}.exe"
#     path="/cygdrive/c/cygwin/usr/local/${app}/${version}/bin/${app}.exe"
     path=`cygpath -w -a ${path}`
     cmd="${HOME}/PsExec.exe -s -i '${path}' ${run_args}"
     eval ${cmd}
  else
    ${build_path}/distrib/${app}/${version}/bin/${app} ${run_args}
  fi
fi

