
# NOTE : png uses zlib.

if [ "${use_png}" = "yes" ] ; then
if [ "${build_use_not_our_png}" = "yes" ] ; then
  use_sys_png=yes
  use_our_png=no
else
  use_sys_png=no
  use_our_png=yes
fi
fi

if [ "${use_sys_png}" = "yes" ] ; then
  if [ `uname` = Darwin ] ; then
    if [ -e /usr/X11/include/png.h ] ; then
      cppflags="${cppflags} -I/usr/X11/include"
      libs="${libs} -L/usr/X11/lib -lpng"
    else
      if [ -e /opt/local/include/png.h ] ; then
        cppflags="${cppflags} -I/opt/local/include"
        libs="${libs} -L/opt/local/lib -lpng"
      else
        echo "exlib/mgr/use_png : /opt/local/include/png.h not found. Use our png."
        use_our_png=yes
      fi
    fi
  else
    if [ ! -e /usr/include/png.h ] ; then
      echo "exlib/mgr/use_png : /usr/include/png.h not found. Use our png."
      use_our_png=yes
    else
      cppflags="${cppflags} -I/usr/include"
      libs="${libs} -lpng"
    fi
  fi
fi

if [ "${use_our_png}" = "yes" ] ; then
  if [ "${png_home}" = "" ] ; then
    png_home=../../ourex/png
  fi

  if [ ${build_visual} = "yes" ] ; then
    ccflags="${ccflags} /I${png_home}/png"
    cppflags="${cppflags} /I${png_home}/png"
  else
    ccflags="${ccflags} -I${png_home}/png"
    cppflags="${cppflags} -I${png_home}/png"
  fi

  if [ `uname` = "Linux" ] ; then
    # for 64 bits processor it seems that we need the below :
    if [ `uname -m` = "x86_64" ] ; then
      cppflags="${cppflags} -DPNG_NO_MMX_CODE"
    fi
  fi

  png_build_dir="${png_home}/${build_dir}"

  if [ ! -d ${png_build_dir} ] ; then
    png_old_dir=`pwd`
    cd ${png_home}
    ./build ${args_ourex}
    cd ${png_old_dir}
  fi

  if [ ! -d ${png_build_dir} ] ; then
    echo "exlib/mgr/use_png : directory ${png_build_dir} not found."
    exit
  fi

  if [ "${use_archive}" = "yes" ] ; then
    libs="${libs} ${png_build_dir}/libourex_png.a"
  else
    if [ ${build_visual} = "yes" ] ; then
      libs="${libs} ${png_build_dir}/ourex_png.lib"
    else
      libs="${libs} -L${png_build_dir} -lourex_png"
    fi
  fi

fi

