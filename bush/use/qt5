# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

if [ "${use_Qt}" = "yes" ] ; then

  Qt_ld_library_path=
  moc_exe=

  lcg_area=
  if [ "`uname -n | grep lxplus`" != "" ] ; then
    lcg_area=/cvmfs/lhcb.cern.ch/lib/lcg/releases
  fi

  if [ "`uname | grep CYGWIN`" != "" ] ; then

    if [ ${build_visual} = "yes" ] ; then
      Qt_home="${c_drive}/Qt/5.12.3/msvc2017_64"
      if [ ! -d ${Qt_home} ] ; then
        echo "bush/use/Qt : Qt not found under ${Qt_home}."
        exit
      fi

      Qt_inc="${Qt_home}/include"

      cppflags="${cppflags} -I${Qt_inc}"

      Qt_lib="${Qt_home}/lib"

      # if including as : #include <qobject.h>  # used in ourex/g4vis.
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtCore"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtGui"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtWidgets"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtOpenGL"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtPrintSupport"

      libs="${libs} ${Qt_lib}/Qt5OpenGL.lib"
      libs="${libs} ${Qt_lib}/Qt5Widgets.lib"
      libs="${libs} ${Qt_lib}/Qt5Gui.lib"
      libs="${libs} ${Qt_lib}/Qt5Core.lib"

      Qt_ld_library_path="${Qt_lib}"

      moc_exe="${Qt_home}/bin/moc.exe"

    elif [ -d /usr/include/qt5/QtCore ] ; then
      # the cygwin Qt5 had been built with cygwin/g++ and with cygwin/X11.

      Qt_home=/usr

      Qt_inc="${Qt_home}/include/qt5"

      cppflags="${cppflags} -I${Qt_inc}"

      # if including as : #include <qobject.h>  # used in ourex/g4vis.
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtCore"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtGui"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtWidgets"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtOpenGL"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtPrintSupport"

      Qt_lib="${c_drive}/cygwin64/lib"	

      libs="${libs} ${Qt_lib}/libQt5OpenGL.dll.a"
      libs="${libs} ${Qt_lib}/libQt5Widgets.dll.a"
      libs="${libs} ${Qt_lib}/libQt5Gui.dll.a"
      libs="${libs} ${Qt_lib}/libQt5Core.dll.a"

      Qt_ld_library_path="${Qt_lib}"

      moc_exe="${Qt_home}/lib/qt5/bin/moc.exe"

    fi

  elif [ `uname` = Darwin ] ; then

    if [ -d /opt/local/libexec/qt5/include/QtUiTools ] ; then

      Qt_home=/opt/local/libexec/qt5

      Qt_frameworks="${Qt_home}/lib"
      cppflags="${cppflags} -F${Qt_frameworks}"

      # if including as : #include <qobject.h>  # used in ourex/g4vis.
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_home}/lib/QtCore.framework/Headers"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_home}/lib/QtGui.framework/Headers"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_home}/lib/QtWidgets.framework/Headers"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_home}/lib/QtOpenGL.framework/Headers"
      Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_home}/lib/QtPrintSupport.framework/Headers"


      libs="${libs} -F${Qt_frameworks} -framework QtOpenGL"
      libs="${libs} -framework QtGui -framework QtCore"
      libs="${libs} -framework QtWidgets"

      moc_exe="${Qt_home}/bin/moc"

    fi

  elif [ "${lcg_area}" != "" ] ; then

    if [ "${BUILD_CONFIG}" = "LCG_96_gcc8" ] ; then
      Qt_home="${lcg_area}/qt5/5.12.1-d6e2e/x86_64-centos7-gcc8-opt"
    elif [ "${BUILD_CONFIG}" = "LCG_95_gcc8" ] ; then
      Qt_home="${lcg_area}/qt5/5.11.1-88bfc/x86_64-centos7-gcc8-opt"
    elif [ "${BUILD_CONFIG}" = "LCG_95_gcc7" ] ; then
      Qt_home="${lcg_area}/qt5/5.11.1-88bfc/x86_64-centos7-gcc7-opt"
    else
      echo 'bush/user/qt5 : lxplus :'
      echo '  you have to define the BUILD_CONFIG variable, for example :'
      echo '    LCG_95_gcc8'
      echo '  and ensure to be in the corresponding environment. In particular'
      echo '  to be sure to have setup the corresponding compiler. Here :'
      echo '    sh> g++ --version'
      echo '  should return a 8.2.0 version number.'
      exit
    fi

    Qt_inc="${Qt_home}/include"

    cppflags="${cppflags} -I${Qt_inc}"

    # if including as : #include <qobject.h>  # used in ourex/g4vis.
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtCore"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtGui"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtWidgets"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtOpenGL"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtPrintSupport"

    libs="${libs} -L${Qt_home}/lib -lQt5OpenGL -lQt5Widgets -lQt5Gui -lQt5Core"

    Qt_ld_library_path="${Qt_home}/lib"

    moc_exe="${Qt_home}/bin/moc"

  elif [ -d /usr/include/qt5 ] ; then  #ostackc
    Qt_home=/usr

    Qt_inc="${Qt_home}/include/qt5"

    cppflags="${cppflags} -I${Qt_inc}"

    # if including as : #include <qobject.h>  # used in ourex/g4vis.
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtCore"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtGui"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtWidgets"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtOpenGL"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtPrintSupport"

    libs="${libs} -L${Qt_home}/lib64 -lQt5OpenGL -lQt5Widgets -lQt5Gui -lQt5Core"

    Qt_ld_library_path="${Qt_home}/lib64"

    moc_exe="${Qt_home}/lib64/qt5/bin/moc"

    # run time : may have to :
    #   UNIX> setenv QT_XKB_CONFIG_ROOT /usr/lib/kbd/keymaps/xkb

  elif [ -d /usr/include/x86_64-linux-gnu/qt5 ] ; then  #ostackess.
    Qt_home=/usr

    Qt_inc="${Qt_home}/include/x86_64-linux-gnu/qt5"

    cppflags="${cppflags} -I${Qt_inc}"

    # if including as : #include <qobject.h>  # used in ourex/g4vis.
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtCore"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtGui"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtWidgets"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtOpenGL"
    Qt_incs_no_guard="${Qt_incs_no_guard} -I${Qt_inc}/QtPrintSupport"

    libs="${libs} -L${Qt_home}/lib/x86_64-linux-gnu -lQt5OpenGL -lQt5Widgets -lQt5Gui -lQt5Core"

    Qt_ld_library_path="${Qt_home}/lib/x86_64-linux-gnu"

    moc_exe="${Qt_home}/lib/x86_64-linux-gnu/qt5/bin/moc"

  fi

  if [ "${moc_exe}" = "" ] ; then
    echo "bush/use/Qt : Qt not found."
    exit
  fi

fi

