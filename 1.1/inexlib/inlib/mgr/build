#!/bin/sh -f

build_verbose=no
what=

build_args=
while test $# -ge 1 ; do
  case $1 in
    -v) build_verbose=yes;build_args="${build_args} $1";;
    -*) build_args="${build_args} $1";;
     *) if [ $# = 1 ] ; then
          what=$1
        else         
          echo "unknown option : $1"
        fi
        ;;
  esac
  shift
done

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////

if [ "${what}" = "" ] ; then
  ./find_rm ../examples/cpp 'inlib_example_*'
  ./find_rm ../inlib '*.gch.*'
  ./find_rm ../inlib '*.cxx'
  find ../inlib -name "*" -type f -exec grep exlib.license {} \;
  
  find ../inlib -name '*' -type f -exec ./build ${build_args} {} \;
  #exit

  dirs=
  dirs="${dirs} ../apps"
  dirs="${dirs} ../tests"
  for dir in ${dirs} ; do
    find ${dir} -maxdepth 1 -name '*.cpp' -type f -exec ./build ${build_args} {} \;
  done


  # NOTE : for exas, we use the local build script.
  find ../examples/cpp -maxdepth 1 -name '*.cpp' -type f -exec ./build_exa ${build_args} {} \;

  exit
fi

if [ -d "${what}" ] ; then
  find ${what} -name '*' -type f -exec ./build ${build_args} {} \;
  exit
fi

base_name=`basename ${what}`

if [ "${what}" = "${base_name}" ] ; then
  # only the name entered, find exact places :
  found="`find .. -name "${base_name}" -print`"
  if [ "${found}" = "" ] ; then
    echo "not found."
  else
    find .. -name "${base_name}" -type f -exec ./build ${build_args} {} \;
  fi
  exit
fi

if [ "`echo ${what} | grep examples`" != "" ] ; then
  ./build_exa ${build_args} ${what}
  exit
fi

#echo $1
dir=`dirname ${what}`
name=`basename ${what}`
group=`basename ${dir}`

suffix=`echo ${base_name} | sed 's:.*\.::'`
if [ "${suffix}" = "" ] ; then suffix=none;fi

name=`echo ${name} | sed -e "s:\.${suffix}::g"`

#echo "dir : ${dir}"
#echo "group : ${group}"
#echo "name : ${name}"
#exit

#////////////////////////////////////
#/// to skip : //////////////////////
#////////////////////////////////////
if [ "`echo ${what} | grep '\.help'`" != "" ] ; then exit; fi
if [ "`echo ${what} | grep '\.icc'`" != "" ] ; then exit; fi
if [ "`echo ${what} | grep '\.js'`" != "" ] ; then exit; fi
if [ "`echo ${what} | grep '\.txt'`" != "" ] ; then exit; fi
if [ "`echo ${what} | grep '\.out'`" != "" ] ; then exit; fi
if [ ${group} = "CVS" ] ; then exit;fi
if [ ${name} = "README" ] ; then exit;fi

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////
if [ ${build_verbose} = yes ] ; then echo "do : ${what}"; fi

inlib_mgr=.
. ${inlib_mgr}/build_header

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////

if [ ${build_visual} = "yes" ] ; then
  # rm painfull warnings about API strcpy, etc... deprecated.
  cppflags="${cppflags} /wd4996"
  ccflags0="${ccflags0} /wd4996"
fi

#////////////////////////////////////
#////////////////////////////////////
#////////////////////////////////////

is_app=no
is_plugin=no

if [ ${group} = "apps" ] ;  then is_app=yes; fi
if [ ${group} = "tests" ] ; then is_app=yes; fi

if [ ${is_app} = "yes" ] ; then

  if [ ${name} = "plugin" ] ; then
    is_plugin=yes
    is_app=no
    plugin=${name}
    cppfiles="${cppfiles} ${what}"
  fi

  if [ ${name} = "utest" ] ; then
    /bin/rm -f tmp_0
    find ../tests/test -name '*.cpp' -print > tmp_0
    for file in $(cat tmp_0) ; do cppfiles="${cppfiles} ${file}";done
    /bin/rm -f tmp_0
    cfiles="${cfiles} ../tests/test/csz_inflate.c"
  fi

  if [ ${name} = "unet" ] ; then
    cppfiles="${cppfiles} ../tests/test/ftp.cpp"
    cppfiles="${cppfiles} ../tests/test/http.cpp"
  fi

#  if [ ${name} = "algebra" ] ; then
#    if [ `uname` = "Darwin" ] ; then
#     libs="${libs} -framework Accelerate"
#   fi
# fi

  if [ ${name} = "a" ] ; then exit; fi
  if [ ${name} = "b" ] ; then exit; fi

fi

#////////////////////////////////////
#/// uses : //////////////////////////
#////////////////////////////////////

if [ ${is_app} = "yes" ] ; then
  if [ ${name} = "thread" ] ; then use_thread=yes; fi
  if [ ${name} = "plug" ] ;   then use_dl=yes; fi
  if [ ${name} = "simbad" ] ; then use_socket=yes;fi
  if [ ${name} = "unet" ] ;   then use_socket=yes;fi
  if [ ${name} = "utest" ] ;  then use_socket=yes;fi
  if [ ${name} = "wserv_client" ] ; then use_socket=yes;fi
  if [ ${name} = "mail_file" ] ;    then use_socket=yes;fi
  if [ ${name} = "file2wall" ] ;    then use_socket=yes;fi
  if [ ${name} = "ftp" ] ;              then use_socket=yes;fi
  if [ ${name} = "http" ] ;             then use_socket=yes;fi
  if [ ${name} = "hostaddr" ] ;         then use_socket=yes;fi
  if [ ${name} = "wall_data_client" ] ; then use_socket=yes;fi
  if [ ${name} = "mail" ] ;             then use_socket=yes;fi
fi

use_inlib=yes

. ${inlib_mgr}/use_inlib
. ${inlib_mgr}/use_socket
. ${inlib_mgr}/use_thread
. ${inlib_mgr}/use_dl

# ////////////////////////////////////
# ////////////////////////////////////
# ////////////////////////////////////

/bin/mkdir -p ${build_path}

if [ ${is_app} = "yes" ] ; then

  app_src=${what}
  app_exe=${name}
  app_name=${name}

  . ./build_app

elif [ ${is_plugin} = "yes" ] ; then

  . ./build_compile
  . ./build_plugin

else

  cppfiles="${cppfiles} ${what}"

  . ./build_compile

fi

/bin/rm -f ${objs}

